{"remainingRequest":"/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/src/App.vue","mtime":1656150356174},{"path":"/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/node_modules/cache-loader/dist/cjs.js","mtime":1656152389617},{"path":"/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1656152389534},{"path":"/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/node_modules/cache-loader/dist/cjs.js","mtime":1656152389617},{"path":"/Users/centr/Desktop/URLShortener/APIGatewayWithoutLambda/amazon-api-gateway-url-shortener/amazon-api-gateway-url-shortener/client/node_modules/vue-loader/lib/index.js","mtime":1656152389487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2IiwgeyBhdHRyczogeyBpZDogImFwcCIgfSB9LCBbCiAgICBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICJzZWN0aW9uIiB9LCBbCiAgICAgIF9jKAogICAgICAgICJuYXYiLAogICAgICAgIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAibmF2YmFyIGlzLWZpeGVkLXRvcCBpcy1kYXJrIiwKICAgICAgICAgIGF0dHJzOiB7IHJvbGU6ICJuYXZpZ2F0aW9uIiwgImFyaWEtbGFiZWwiOiAibWFpbiBuYXZpZ2F0aW9uIiB9LAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJuYXZiYXItYnJhbmQiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJuYXZiYXItaXRlbSIgfSwgWwogICAgICAgICAgICAgIF9jKCJoMSIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSBoYXMtdGV4dC13aGl0ZSIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uYXBwTmFtZSkpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibmF2YmFyLWJ1cmdlciBidXJnZXIiLAogICAgICAgICAgICAgICAgY2xhc3M6IHsgImlzLWFjdGl2ZSI6IF92bS5pc09wZW4gfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHJvbGU6ICJidXR0b24iLAogICAgICAgICAgICAgICAgICAiYXJpYS1sYWJlbCI6ICJtZW51IiwKICAgICAgICAgICAgICAgICAgImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiLAogICAgICAgICAgICAgICAgICAiZGF0YS10YXJnZXQiOiAibmF2YmFyQ29sbGFwc2UiLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLmlzT3BlbiA9ICFfdm0uaXNPcGVuCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7ICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9IH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7ICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9IH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7ICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9IH0pLAogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJuYXZiYXItbWVudSIsCiAgICAgICAgICAgICAgY2xhc3M6IHsgImlzLWFjdGl2ZSI6IF92bS5pc09wZW4gfSwKICAgICAgICAgICAgICBhdHRyczogeyBpZDogIm5hdmJhckNvbGxhcHNlIiB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJuYXZiYXItc3RhcnQiIH0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibmF2YmFyLWVuZCIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLmF1dGhvcml6ZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJuYXZiYXItaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IF92bS5sb2dPdXRVcmwgfSwKICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5sb2dvdXQoKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiTG9nIE91dCIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICFfdm0uYXV0aG9yaXplZAogICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm5hdmJhci1pdGVtIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogX3ZtLnNpZ25VcFVybCB9LAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIlNpZ24gdXAiKV0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAhX3ZtLmF1dGhvcml6ZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJuYXZiYXItaXRlbSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IF92bS5sb2dJblVybCB9LAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkxvZyBpbiIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICBdCiAgICAgICksCiAgICBdKSwKICAgIF9jKCJzZWN0aW9uIiwgeyBzdGF0aWNDbGFzczogInNlY3Rpb24iIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICBfdm0uYXV0aG9yaXplZAogICAgICAgICAgPyBfYygiZGl2IiwgW19jKCJyb3V0ZXItdmlldyIpXSwgMSkKICAgICAgICAgIDogX2MoImRpdiIsIFsKICAgICAgICAgICAgICBfYygiaDEiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiV2VsY29tZSB0byAiICsgX3ZtLl9zKF92bS5hcHBOYW1lKSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNDbGFzczogInN1YnRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIlRoZSBORVdFU1QgVVJMIHNob3J0ZW5lciBvbiB0aGUgYmxvY2suIiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX3ZtLmxpbmtOb3RGb3VuZAogICAgICAgICAgICAgICAgPyBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBXZSdyZSBzb3JyeSwgdGhhdCBsaW5rIGNvdWxkIG5vdCBiZSBmb3VuZC4gIiksCiAgICAgICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6IF92bS5zaWduVXBVcmwgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlNpZ24gdXAiKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBvciAiKSwKICAgICAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogX3ZtLmxvZ0luVXJsIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJMb2cgaW4iKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiB0byByZWdpc3RlciBpdD8gIiksCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICBdKSwKICAgICAgXSksCiAgICBdKSwKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}